//execute1("celltypes.element(\"d1msn\")")

begintemplate d1msn
public init, topol, basic_shape, subsets, geom, biophys, geom_nseg, biophys_inhomo
public synlist, x, y, z, position, connect2target

public soma, dend6, dend4, dend3, axon, dend5, dend2
public dend1, dend6_3, dend6_2, dend6_1, dend4_2, dend4_1, dend3_3
public dend3_1, dend3_2, dend5_3, dend5_2, dend5_1, dend2_2, dend2_1
public dend1_2, dend1_1
public all

objref synlist

proc init() {
  topol()
  subsets()
  geom()
  biophys()
  geom_nseg()
  synlist = new List()
  synapses()
  x = y = z = 0 // only change via position
}

create soma, dend6, dend4, dend3, axon[3], dend5, dend2
create dend1, dend6_3, dend6_2[3], dend6_1[3], dend4_2[3], dend4_1[3], dend3_3[3]
create dend3_1[3], dend3_2[3], dend5_3, dend5_2[3], dend5_1[3], dend2_2[3], dend2_1[3]
create dend1_2[3], dend1_1[3]

proc topol() { local i
  connect dend6(0), soma(0)
  connect dend4(0), soma(0)
  connect dend3(0), soma(0)
  connect axon(0), soma(0.5)
  for i = 1, 2 connect axon[i](0), axon[i-1](1)
  connect dend5(0), soma(1)
  connect dend2(0), soma(1)
  connect dend1(0), soma(1)
  connect dend6_3(0), dend6(0.8)
  connect dend6_2(0), dend6(1)
  for i = 1, 2 connect dend6_2[i](0), dend6_2(1)
  connect dend6_1(0), dend6(1)
  for i = 1, 2 connect dend6_1[i](0), dend6_1(1)
  connect dend4_2(0), dend4(1)
  for i = 1, 2 connect dend4_2[i](0), dend4_2(1)
  connect dend4_1(0), dend4(1)
  for i = 1, 2 connect dend4_1[i](0), dend4_1(1)
  connect dend3_3(0), dend3(0.8)
  for i = 1, 2 connect dend3_3[i](0), dend3_3(1)
  connect dend3_1(0), dend3(1)
  for i = 1, 2 connect dend3_1[i](0), dend3_1(1)
  connect dend3_2(0), dend3(1)
  for i = 1, 2 connect dend3_2[i](0), dend3_2(1)
  connect dend5_3(0), dend5(0.8)
  connect dend5_2(0), dend5(1)
  for i = 1, 2 connect dend5_2[i](0), dend5_2(1)
  connect dend5_1(0), dend5(1)
  for i = 1, 2 connect dend5_1[i](0), dend5_1(1)
  connect dend2_2(0), dend2(1)
  for i = 1, 2 connect dend2_2[i](0), dend2_2(1)
  connect dend2_1(0), dend2(1)
  for i = 1, 2 connect dend2_1[i](0), dend2_1(1)
  connect dend1_2(0), dend1(1)
  for i = 1, 2 connect dend1_2[i](0), dend1_2(1)
  connect dend1_1(0), dend1(1)
  for i = 1, 2 connect dend1_1[i](0), dend1_1(1)
  basic_shape()
}
proc shape3d_1() {
  soma {pt3dclear()
	pt3dadd(0, 0, 0, 12.0737)
	pt3dadd(14.2347, 0, 0, 12.0737)
  }
  dend6 {pt3dclear()
	pt3dadd(0, 0, 0, 1.27785)
	pt3dadd(-26.9899, 0, 0, 1.27785)
  }
  dend4 {pt3dclear()
	pt3dadd(0, 0, 0, 1.27785)
	pt3dadd(-18.7586, 19.4054, 0, 1.27785)
  }
  dend3 {pt3dclear()
	pt3dadd(0, 0, 0, 1.27785)
	pt3dadd(-19.0847, -19.0847, 0, 1.27785)
  }
  axon {pt3dclear()
	pt3dadd(7.11737, 0, 0, 1.1875)
	pt3dadd(7.11737, 10, 0, 1.1875)
	pt3dadd(7.11737, 20, 0, 1.1875)
  }
  dend5 {pt3dclear()
	pt3dadd(14.2347, 0, 0, 1.27785)
	pt3dadd(41.2246, 0, 0, 1.27785)
  }
  dend2 {pt3dclear()
	pt3dadd(14.2347, 0, 0, 1.27785)
	pt3dadd(33.3195, 19.0847, 0, 1.27785)
  }
  dend1 {pt3dclear()
	pt3dadd(14.2347, 0, 0, 1.27785)
	pt3dadd(33.6402, -18.7586, 0, 1.27785)
  }
  dend6_3 {pt3dclear()
	pt3dadd(-21.5919, 0, 0, 1.28798)
	pt3dadd(-49.494, -17.4388, 0, 1.28798)
  }
  dend6_2 {pt3dclear()
	pt3dadd(-26.9899, 0, 0, 1.28798)
	pt3dadd(-56.4196, -14.7149, 0, 1.28798)
  }
  dend6_1 {pt3dclear()
	pt3dadd(-26.9899, 0, 0, 1.28798)
	pt3dadd(-56.4196, 14.7149, 0, 1.28798)
  }
  dend4_2 {pt3dclear()
	pt3dadd(-18.7586, 19.4054, 0, 1.28798)
	pt3dadd(-51.662, 19.4054, 0, 1.28798)
  }
  dend4_1 {pt3dclear()
	pt3dadd(-18.7586, 19.4054, 0, 1.28798)
	pt3dadd(-29.1636, 50.6204, 0, 1.28798)
  }
  dend3_3 {pt3dclear()
	pt3dadd(-15.2678, -15.2678, 0, 1.28798)
	pt3dadd(-48.1712, -15.2678, 0, 1.28798)
  }
  dend3_1 {pt3dclear()
	pt3dadd(-19.0847, -19.0847, 0, 1.28798)
	pt3dadd(-33.7996, -48.5145, 0, 1.28798)
  }
  dend3_2 {pt3dclear()
	pt3dadd(-19.0847, -19.0847, 0, 1.28798)
	pt3dadd(-51.9882, -19.0847, 0, 1.28798)
  }
  axon[1] {pt3dclear()
	pt3dadd(7.11737, 20, 0, 0.6875)
	pt3dadd(7.11737, 35, 0, 0.6875)
	pt3dadd(7.11737, 50, 0, 0.6875)
  }
  dend5_3 {pt3dclear()
	pt3dadd(35.8267, 0, 0, 1.28798)
	pt3dadd(63.7287, -17.4388, 0, 1.28798)
  }
  dend5_2 {pt3dclear()
	pt3dadd(41.2246, 0, 0, 1.28798)
	pt3dadd(70.6544, -14.7149, 0, 1.28798)
  }
  dend5_1 {pt3dclear()
	pt3dadd(41.2246, 0, 0, 1.28798)
	pt3dadd(70.6544, 14.7149, 0, 1.28798)
  }
  dend2_2 {pt3dclear()
	pt3dadd(33.3195, 19.0847, 0, 1.28798)
	pt3dadd(43.7245, 50.2997, 0, 1.28798)
  }
  dend2_1 {pt3dclear()
	pt3dadd(33.3195, 19.0847, 0, 1.28798)
	pt3dadd(66.2229, 19.0847, 0, 1.28798)
  }
  dend1_2 {pt3dclear()
	pt3dadd(33.6402, -18.7586, 0, 1.28798)
	pt3dadd(66.5436, -18.7586, 0, 1.28798)
  }
  dend1_1 {pt3dclear()
	pt3dadd(33.6402, -18.7586, 0, 1.28798)
	pt3dadd(33.6402, -51.662, 0, 1.28798)
  }
  dend6_2[1] {pt3dclear()
	pt3dadd(-56.4196, -14.7149, 0, 0.87893)
	pt3dadd(-160.739, -119.034, 0, 0.87893)
  }
  dend6_2[2] {pt3dclear()
	pt3dadd(-56.4196, -14.7149, 0, 0.87893)
	pt3dadd(-203.949, -14.7149, 0, 0.87893)
  }
  dend6_1[1] {pt3dclear()
	pt3dadd(-56.4196, 14.7149, 0, 0.87893)
	pt3dadd(-160.739, 119.034, 0, 0.87893)
  }
  dend6_1[2] {pt3dclear()
	pt3dadd(-56.4196, 14.7149, 0, 0.87893)
	pt3dadd(-203.949, 14.7149, 0, 0.87893)
  }
  dend4_2[1] {pt3dclear()
	pt3dadd(-51.662, 19.4054, 0, 0.87893)
	pt3dadd(-183.617, -46.5718, 0, 0.87893)
  }
  dend4_2[2] {pt3dclear()
	pt3dadd(-51.662, 19.4054, 0, 0.87893)
	pt3dadd(-117.639, 151.36, 0, 0.87893)
  }
  dend4_1[1] {pt3dclear()
	pt3dadd(-29.1636, 50.6204, 0, 0.87893)
	pt3dadd(-161.118, 116.598, 0, 0.87893)
  }
  dend4_1[2] {pt3dclear()
	pt3dadd(-29.1636, 50.6204, 0, 0.87893)
	pt3dadd(75.1556, 154.94, 0, 0.87893)
  }
  dend3_3[1] {pt3dclear()
	pt3dadd(-48.1712, -15.2678, 0, 0.87893)
	pt3dadd(17.806, -147.222, 0, 0.87893)
  }
  dend3_3[2] {pt3dclear()
	pt3dadd(-48.1712, -15.2678, 0, 0.87893)
	pt3dadd(-114.148, -147.222, 0, 0.87893)
  }
  dend3_1[1] {pt3dclear()
	pt3dadd(-33.7996, -48.5145, 0, 0.87893)
	pt3dadd(-173.758, -95.1674, 0, 0.87893)
  }
  dend3_1[2] {pt3dclear()
	pt3dadd(-33.7996, -48.5145, 0, 0.87893)
	pt3dadd(32.1777, -180.469, 0, 0.87893)
  }
  dend3_2[1] {pt3dclear()
	pt3dadd(-51.9882, -19.0847, 0, 0.87893)
	pt3dadd(-156.307, -123.404, 0, 0.87893)
  }
  dend3_2[2] {pt3dclear()
	pt3dadd(-51.9882, -19.0847, 0, 0.87893)
	pt3dadd(-183.943, 46.8925, 0, 0.87893)
  }
  axon[2] {pt3dclear()
	pt3dadd(7.11737, 50, 0, 0.5)
	pt3dadd(7.11736, 250, 0, 0.5)
	pt3dadd(7.11735, 450, 0, 0.5)
  }
  dend5_2[1] {pt3dclear()
	pt3dadd(70.6544, -14.7149, 0, 0.87893)
	pt3dadd(174.974, -119.034, 0, 0.87893)
  }
  dend5_2[2] {pt3dclear()
	pt3dadd(70.6544, -14.7149, 0, 0.87893)
	pt3dadd(218.184, -14.7149, 0, 0.87893)
  }
  dend5_1[1] {pt3dclear()
	pt3dadd(70.6544, 14.7149, 0, 0.87893)
	pt3dadd(174.974, 119.034, 0, 0.87893)
  }
  dend5_1[2] {pt3dclear()
	pt3dadd(70.6544, 14.7149, 0, 0.87893)
	pt3dadd(218.184, 14.7149, 0, 0.87893)
  }
  dend2_2[1] {pt3dclear()
	pt3dadd(43.7245, 50.2997, 0, 0.87893)
	pt3dadd(-22.2528, 182.254, 0, 0.87893)
  }
  dend2_2[2] {pt3dclear()
	pt3dadd(43.7245, 50.2997, 0, 0.87893)
	pt3dadd(175.679, 116.277, 0, 0.87893)
  }
  dend2_1[1] {pt3dclear()
	pt3dadd(66.2229, 19.0847, 0, 0.87893)
	pt3dadd(132.2, 151.039, 0, 0.87893)
  }
  dend2_1[2] {pt3dclear()
	pt3dadd(66.2229, 19.0847, 0, 0.87893)
	pt3dadd(198.177, -46.8925, 0, 0.87893)
  }
  dend1_2[1] {pt3dclear()
	pt3dadd(66.5436, -18.7586, 0, 0.87893)
	pt3dadd(170.863, -123.078, 0, 0.87893)
  }
  dend1_2[2] {pt3dclear()
	pt3dadd(66.5436, -18.7586, 0, 0.87893)
	pt3dadd(198.498, 47.2187, 0, 0.87893)
  }
  dend1_1[1] {pt3dclear()
	pt3dadd(33.6402, -51.662, 0, 0.87893)
	pt3dadd(165.595, -117.639, 0, 0.87893)
  }
  dend1_1[2] {pt3dclear()
	pt3dadd(33.6402, -51.662, 0, 0.87893)
	pt3dadd(-32.3371, -183.617, 0, 0.87893)
  }
}
proc basic_shape() {
  shape3d_1()
}

objref all
proc subsets() { local i
  objref all
  all = new SectionList()
    soma all.append()
    dend6 all.append()
    dend4 all.append()
    dend3 all.append()
    for i=0, 2 axon[i] all.append()
    dend5 all.append()
    dend2 all.append()
    dend1 all.append()
    dend6_3 all.append()
    for i=0, 2 dend6_2[i] all.append()
    for i=0, 2 dend6_1[i] all.append()
    for i=0, 2 dend4_2[i] all.append()
    for i=0, 2 dend4_1[i] all.append()
    for i=0, 2 dend3_3[i] all.append()
    for i=0, 2 dend3_1[i] all.append()
    for i=0, 2 dend3_2[i] all.append()
    dend5_3 all.append()
    for i=0, 2 dend5_2[i] all.append()
    for i=0, 2 dend5_1[i] all.append()
    for i=0, 2 dend2_2[i] all.append()
    for i=0, 2 dend2_1[i] all.append()
    for i=0, 2 dend1_2[i] all.append()
    for i=0, 2 dend1_1[i] all.append()

}
proc geom() {
}
external lambda_f
proc geom_nseg() {
}
proc biophys() {
}
proc biophys_inhomo(){}
proc position() { local i
  soma for i = 0, n3d()-1 {
    pt3dchange(i, $1-x+x3d(i), $2-y+y3d(i), $3-z+z3d(i), diam3d(i))
  }
  x = $1  y = $2  z = $3
}
obfunc connect2target() { localobj nc //$o1 target point process, optional $o2 returned NetCon
  soma nc = new NetCon(&v(1), $o1)
  nc.threshold = 10
  if (numarg() == 2) { $o2 = nc } // for backward compatibility
  return nc
}
proc synapses() {}
endtemplate d1msn
